#!/bin/bash

bash_prompt_command() {
    # How many characters of the $PWD should be kept
    local pwdmaxlen=20
    # Indicate that there has been dir truncation
    local trunc_symbol=".."
    local dir=${PWD##*/}
    pwdmaxlen=$(( ( pwdmaxlen < ${#dir} ) ? ${#dir} : pwdmaxlen ))
    NEW_PWD=${PWD/#$HOME/\~}
    local pwdoffset=$(( ${#NEW_PWD} - pwdmaxlen ))
		local EMG="\[\033[1;32m\]"
    if [ ${pwdoffset} -gt "0" ]
    then
        NEW_PWD=${NEW_PWD:$pwdoffset:$pwdmaxlen}
        NEW_PWD=${trunc_symbol}/${NEW_PWD#*/}
#				local bn=`basename $NEW_PWD`
#				NEW_PWD=${NEW_PWD/\/`basename $NEW_PWD`/\/`basename $NEW_PWD`}
    fi
}

bash_prompt() {
    case $TERM in
     xterm*|rxvt*)
         local TITLEBAR='\[\033]0;\h:${NEW_PWD}\007\]'
          ;;
     *)
         local TITLEBAR=""
          ;;
    esac
    local NONE="\[\033[0m\]"    # unsets color to term's fg color
    
    # regular colors
    local K="\[\033[0;30m\]"    # black
    local R="\[\033[0;31m\]"    # red
    local G="\[\033[0;32m\]"    # green
    local Y="\[\033[0;33m\]"    # yellow
    local B="\[\033[0;34m\]"    # blue
    local M="\[\033[0;35m\]"    # magenta
    local C="\[\033[0;36m\]"    # cyan
    local W="\[\033[0;37m\]"    # white
    
    # emphasized (bolded) colors
    local EMK="\[\033[1;30m\]"
    local EMR="\[\033[1;31m\]"
    local EMG="\[\033[1;32m\]"
    local EMY="\[\033[1;33m\]"
    local EMB="\[\033[1;34m\]"
    local EMM="\[\033[1;35m\]"
    local EMC="\[\033[1;36m\]"
    local EMW="\[\033[1;37m\]"
    
    # background colors
    local BGK="\[\033[40m\]"
    local BGR="\[\033[41m\]"
    local BGG="\[\033[42m\]"
    local BGY="\[\033[43m\]"
    local BGB="\[\033[44m\]"
    local BGM="\[\033[45m\]"
    local BGC="\[\033[46m\]"
    local BGW="\[\033[47m\]"
    
    local UC=$W                 # user's color
		local SC="${EMW}"
#    [ $UID -eq "0" ] && UC=$R   # root's color
#		UC=$W
#    NEW_PWD='${NEW_PWD/\/`basename $NEW_PWD`/\/${EMG}`basename $NEW_PWD`}'

#	  local PS_TR="\[\033[s\]\[\033[1;\$((COLUMNS-20))f\]${EMR}\$(echo $HOSTNAME)\[\033[u\]"

		local PS_TR=""

		
		if [ -f /yoda/etc/mycolor.local  ]; then
			SC=$(cat /yoda/etc/mycolor.local)
		fi

		DBCOLOR=$EMC

		COLOR_HOSTNAME=$SC
	
		local HOOSTNAME=`/bin/hostname`
		HOOSTNAME=${HOOSTNAME%%\.[a-z]*}

		if [[ $HOSTNAME = db* ]]; then
			COLOR_HOSTNAME=$DBCOLOR
		fi

 		local HOSTNUM=$(expr "$HOOSTNAME" : '[a-z]*\([0-9]\+\)')
		#local HOSTNUM=$(expr "$HOOSTNAME" : '.*\([0-9]\)')
		local HOSTSTR=$(expr "$HOOSTNAME" : '\([a-z]*\)[0-9]')
		local HOSTZERO=""
		
		if [[ $HOSTNUM = 0* ]]; then
			HOSTZERO="\[\033[38;5;166m0"
			HOSTNUM=${HOSTNUM//0/}
		fi

		if [ ! -e $HOSTSTR ]; then
			HOOSTNAME="${COLOR_HOSTNAME}${HOSTSTR}${HOSTZERO}\[\033[38;5;208m${HOSTNUM}"
		else
			HOOSTNAME="\\h"
		fi

		PS1="${PS_TR}$TITLEBAR\n${EMK}[${W}\u${EMK}@${EMR}${HOOSTNAME} ${Y}\${NEW_PWD/\`basename \${NEW_PWD}\`/${EMY}\`basename \${NEW_PWD}\`}${EMK}]${SC}\\$ ${NONE}"
#    PS1="$TITLEBAR\n${EMK}[${W}\u${EMK}@${EMR}\h ${G}\${NEW_PWD}${EMK}]${UC}\\$ ${NONE}"
    # without colors: PS1="[\u@\h \${NEW_PWD}]\\$ "
    # extra backslash in front of \$ to make bash colorize the prompt
}


PROMPT_COMMAND=bash_prompt_command
bash_prompt
unset bash_prompt
